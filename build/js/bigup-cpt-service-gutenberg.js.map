{"version":3,"file":"js/bigup-cpt-service-gutenberg.js","mappings":"sJAQA,MAAM,OAAEA,EAAM,IAAEC,EAAG,aAAEC,GAAiBC,EAEtCC,QAAQC,IAAK,2CAOb,MAAMC,EAAUA,EAAIC,WAAUC,aAAYC,oBAEzC,GAAKF,IAAaN,EAAM,OAAO,KAG/B,IAAIS,EAAS,GAmBb,OAlBAR,EAAaS,SAASC,IACrB,MAAMC,EAAUb,EAASC,EAAMW,EAAYE,OACrCC,EAAQP,EAAYK,IAAa,GACjCG,EAAYJ,EAAYK,WAC9BP,EAAOQ,KAAM,CACZ,QAAWL,EACX,MAASE,EACT,YAAiBI,GAAcV,EAAe,CAAE,CAAEI,GAAWM,IAC7D,MAASP,EAAYQ,MACrB,YAAeR,EAAYS,YAC3B,KAAQL,EACR,YAAeJ,GAAaU,aAAe,GAC3C,SAAYV,GAAaW,UAAY,GACrC,UAAaX,GAAaY,cAAgB,GAC1C,MAAyB,iBAAdR,IAAiCS,EAAAA,EAAAA,YAAaC,GAAYA,EAAQ,QAASC,SAAUZ,MAC9F,KAIHa,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KACGnB,EAAOoB,KAAOC,IACfH,EAAAA,EAAAA,eAACI,EAAAA,2BAA0B,CAC1B/B,IAAM8B,EAAMlB,QACZoB,KAAOF,EAAMlB,QAAU,SACvBqB,MAAQH,EAAMX,MACde,aAAc,GAEG,WAAfJ,EAAMK,OACPR,EAAAA,EAAAA,eAACS,EAAAA,SAAQ,MACRT,EAAAA,EAAAA,eAACU,EAAAA,YAAW,CACXlB,MAAQW,EAAMV,YACdN,MAAQgB,EAAMhB,MACdwB,SAAWR,EAAMS,YACjBJ,KAAOL,EAAMK,KACbd,YAAcS,EAAMT,YACpBC,SAAWQ,EAAMR,SACjBkB,UAAYV,EAAMW,aAKJ,iBAAfX,EAAMK,OACPR,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACCD,EAAAA,EAAAA,eAACS,EAAAA,SAAQ,MACRT,EAAAA,EAAAA,eAACe,EAAAA,iBAAgB,MAChBf,EAAAA,EAAAA,eAACgB,EAAAA,YAAW,CACXC,SAAaC,GAAcf,EAAMS,YAAaM,EAASC,IACvDhC,MAAQgB,EAAMhB,MACdiC,aAAe,CAAE,SACjBC,OAASA,EAAIC,WACZtB,EAAAA,EAAAA,eAACuB,EAAAA,OAAM,CACNC,UAAcrB,EAAMhB,MAA+C,sCAAvC,qCAC5BsC,QAAUH,IAENnB,EAAMhB,QAASuC,EAAAA,EAAAA,IAAI,cAAe,0BACpBC,IAAhBxB,EAAMyB,QACR5B,EAAAA,EAAAA,eAAC6B,EAAAA,kBAAiB,CACjBC,aAAe3B,EAAMyB,MAAMG,cAAcC,MACzCC,cAAgB9B,EAAMyB,MAAMG,cAAcG,SAE1ClC,EAAAA,EAAAA,eAAA,OAAKmC,IAAMhC,EAAMyB,MAAMQ,mBAS3BjC,EAAMhB,QACPa,EAAAA,EAAAA,eAACS,EAAAA,SAAQ,MACRT,EAAAA,EAAAA,eAACe,EAAAA,iBAAgB,MAChBf,EAAAA,EAAAA,eAACgB,EAAAA,YAAW,CACXV,OAAOoB,EAAAA,EAAAA,IAAI,gBAAiB,qBAC5BvC,MAAQgB,EAAMhB,MACd8B,SAAaC,GAAcf,EAAMS,YAAaM,EAASC,IACvDC,aAAe,CAAE,SACjBC,OAASA,EAAIC,WACZtB,EAAAA,EAAAA,eAACuB,EAAAA,OAAM,CACNE,QAAUH,EACVe,QAAQ,YACRC,SAAO,IAELZ,EAAAA,EAAAA,IAAI,eAAgB,0BAK1B1B,EAAAA,EAAAA,eAACe,EAAAA,iBAAgB,MAChBf,EAAAA,EAAAA,eAACuB,EAAAA,OAAM,CACNE,QAAUA,IAAMtB,EAAMS,YAAa,GACnCyB,QAAQ,YACRC,SAAO,IAELZ,EAAAA,EAAAA,IAAI,cAAe,4BAS3B,EAICa,GAAkBC,EAAAA,EAAAA,aAAc1C,IAC9B,CACNlB,WAAYkB,EAAQ,eAAgB2C,uBAAwB,QAC5D9D,SAAUmB,EAAQ,eAAgB4C,yBAI9BC,GAAoBC,EAAAA,EAAAA,eAAgBC,IAClC,CACNhE,aAAAA,CAAgBU,GACfsD,EAAU,eAAgBC,SAAU,CAAEC,KAAMxD,GAC7C,MAIF,GAAeyD,EAAAA,EAAAA,SAAS,CACvBT,EACAI,GAFD,CAGKjE,GAELA,EAAQuE,UAAY,CACnBtE,SAAUuE,IAAAA,OACVtE,WAAYsE,IAAAA,OACZrE,cAAeqE,IAAAA,K,6BChJhB,IAAIC,EAAuB,EAAQ,KAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAI3D,KAAO,sBACL2D,CAPN,CAQF,CAEA,SAASE,IACP,OAAOT,CACT,CAHAA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAelB,UAAYkB,EAEpBA,CACT,C,gBC/CEb,EAAOC,QAAU,EAAQ,IAAR,E,uBCNnBD,EAAOC,QAFoB,8C,uBCT3BD,EAAOC,QAAUiC,OAAc,K,uBCA/BlC,EAAOC,QAAUiC,OAAW,GAAe,W,uBCA3ClC,EAAOC,QAAUiC,OAAW,GAAc,U,uBCA1ClC,EAAOC,QAAUiC,OAAW,GAAW,O,uBCAvClC,EAAOC,QAAUiC,OAAW,GAAQ,I,sBCApClC,EAAOC,QAAUiC,OAAW,GAAY,Q,uBCAxClC,EAAOC,QAAUiC,OAAW,GAAQ,I,uBCApClC,EAAOC,QAAUiC,OAAW,GAAW,O,uqBCCnCC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBjE,IAAjBkE,EACH,OAAOA,EAAarC,QAGrB,IAAID,EAASmC,EAAyBE,GAAY,CAGjDpC,QAAS,CAAC,GAOX,OAHAsC,EAAoBF,GAAUrC,EAAQA,EAAOC,QAASmC,GAG/CpC,EAAOC,OACf,CCrBAmC,EAAoBI,EAAKxC,IACxB,IAAIyC,EAASzC,GAAUA,EAAO0C,WAC7B,IAAO1C,EAAiB,QACxB,IAAM,EAEP,OADAoC,EAAoBO,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdL,EAAoBO,EAAI,CAAC1C,EAAS4C,KACjC,IAAI,IAAI/H,KAAO+H,EACXT,EAAoBU,EAAED,EAAY/H,KAASsH,EAAoBU,EAAE7C,EAASnF,IAC5EiI,OAAOC,eAAe/C,EAASnF,EAAK,CAAEmI,YAAY,EAAMC,IAAKL,EAAW/H,IAE1E,ECNDsH,EAAoBU,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,0CCUlFI,EAAAA,EAAAA,gBAAgB,4BAA6B,CAC5C1F,OAAQ3C,EAAAA,G","sources":["webpack://bigup-cpt-service/./src/components/MetaBox.js","webpack://bigup-cpt-service/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://bigup-cpt-service/./node_modules/prop-types/index.js","webpack://bigup-cpt-service/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://bigup-cpt-service/external window \"React\"","webpack://bigup-cpt-service/external window [\"wp\",\"blockEditor\"]","webpack://bigup-cpt-service/external window [\"wp\",\"components\"]","webpack://bigup-cpt-service/external window [\"wp\",\"compose\"]","webpack://bigup-cpt-service/external window [\"wp\",\"data\"]","webpack://bigup-cpt-service/external window [\"wp\",\"editPost\"]","webpack://bigup-cpt-service/external window [\"wp\",\"i18n\"]","webpack://bigup-cpt-service/external window [\"wp\",\"plugins\"]","webpack://bigup-cpt-service/webpack/bootstrap","webpack://bigup-cpt-service/webpack/runtime/compat get default export","webpack://bigup-cpt-service/webpack/runtime/define property getters","webpack://bigup-cpt-service/webpack/runtime/hasOwnProperty shorthand","webpack://bigup-cpt-service/./src/js/bigup-cpt-service-gutenberg.js"],"sourcesContent":["import { __ } from '@wordpress/i18n'\nimport PropTypes from 'prop-types'\nimport { compose } from '@wordpress/compose'\nimport { withSelect, withDispatch, useSelect } from '@wordpress/data'\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post'\nimport { PanelRow, TextControl, Button, ResponsiveWrapper } from '@wordpress/components'\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor'\nimport json from '../../data/service-definition'\nconst { prefix, key, customFields } = json\n\nconsole.log( 'bigup-cpt-service-metabox PLUGIN LOADED' )\n\n/**\n * Add a metabox for all post custom fields.\n * \n * @see https://kinsta.com/blog/wordpress-add-meta-box-to-post/ \n */\nconst MetaBox = ( { postType, metaFields, setMetaFields } ) => {\n\n\tif ( postType !== key ) return null\n\n\t// Dynamically build an object array of meta fields for output in the panel.\n\tlet fields = []\n\tcustomFields.forEach( customField => {\n\t\tconst metaKey = prefix + key + customField.suffix\n\t\tconst value = metaFields[ metaKey ] || ''\n\t\tconst inputType = customField.input_type\n\t\tfields.push( {\n\t\t\t'metaKey': metaKey,\n\t\t\t'value': value,\n\t\t\t'updateValue': ( newValue ) => setMetaFields( { [ metaKey ]: newValue } ),\n\t\t\t'label': customField.label,\n\t\t\t'description': customField.description,\n\t\t\t'type': inputType,\n\t\t\t'placeholder': customField?.placeholder || '',\n\t\t\t'required': customField?.required || '',\n\t\t\t'maxlength': customField?.length_limit || '',\n\t\t\t'media': ( inputType === 'image-upload' ) ? useSelect( ( select ) => select( \"core\" ).getMedia( value ) ) : false,\n\t\t} )\n\t} )\n\n\treturn(\n\t\t<>\n\t\t\t{ fields.map( ( field ) => (\n\t\t\t\t<PluginDocumentSettingPanel\n\t\t\t\t\tkey={ field.metaKey }\n\t\t\t\t\tname={ field.metaKey + '-panel' }\n\t\t\t\t\ttitle={ field.label } \n\t\t\t\t\tinitialOpen={ true }\n\t\t\t\t>\n\t\t\t\t\t{ field.type === 'number' &&\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ field.description }\n\t\t\t\t\t\t\t\tvalue={ field.value }\n\t\t\t\t\t\t\t\tonChange={ field.updateValue }\n\t\t\t\t\t\t\t\ttype={ field.type }\n\t\t\t\t\t\t\t\tplaceholder={ field.placeholder }\n\t\t\t\t\t\t\t\trequired={ field.required }\n\t\t\t\t\t\t\t\tmaxLength={ field.maxlength }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t}\n\n\t\t\t\t\t{ field.type === 'image-upload' &&\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\t\tonSelect={ ( newMedia ) => field.updateValue( newMedia.id ) }\n\t\t\t\t\t\t\t\t\t\tvalue={ field.value }\n\t\t\t\t\t\t\t\t\t\tallowedTypes={ [ 'image' ] }\n\t\t\t\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\tclassName={ ! field.value ? 'editor-post-featured-image__toggle' : 'editor-post-featured-image__preview' }\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{ ! field.value && __( 'Set an icon', 'bigup-cpt-service' ) }\n\t\t\t\t\t\t\t\t\t\t\t\t{ field.media !== undefined &&\n\t\t\t\t\t\t\t\t\t\t\t\t<ResponsiveWrapper\n\t\t\t\t\t\t\t\t\t\t\t\t\tnaturalWidth={ field.media.media_details.width }\n\t\t\t\t\t\t\t\t\t\t\t\t\tnaturalHeight={ field.media.media_details.height }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={ field.media.source_url } />\n\t\t\t\t\t\t\t\t\t\t\t\t</ResponsiveWrapper>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t{ field.value &&\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\t\t\t\t\ttitle={__( 'Replace image', 'bigup-cpt-service' )}\n\t\t\t\t\t\t\t\t\t\t\tvalue={ field.value }\n\t\t\t\t\t\t\t\t\t\t\tonSelect={ ( newMedia ) => field.updateValue( newMedia.id ) }\n\t\t\t\t\t\t\t\t\t\t\tallowedTypes={ [ 'image' ] }\n\t\t\t\t\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\" \n\t\t\t\t\t\t\t\t\t\t\t\t\tisLarge\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'Replace icon', 'bigup-cpt-service' ) }\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => field.updateValue( 0 ) }\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\" \n\t\t\t\t\t\t\t\t\t\t\tisLarge\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Remove icon', 'bigup-cpt-service' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</PluginDocumentSettingPanel>\n\t\t\t) ) }\n\t\t</>\n\t)\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\treturn {\n\t\tmetaFields: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\tpostType: select( 'core/editor' ).getCurrentPostType()\n\t}\n} )\n\nconst applyWithDispatch = withDispatch( ( dispatch ) => {\n\treturn {\n\t\tsetMetaFields ( newValue ) {\n\t\t\tdispatch( 'core/editor' ).editPost( { meta: newValue } )\n\t\t}\n\t}\n} )\n\nexport default compose( [\n\tapplyWithSelect,\n\tapplyWithDispatch\n] )( MetaBox )\n\nMetaBox.propTypes = {\n\tpostType: PropTypes.string,\n\tmetaFields: PropTypes.object,\n\tsetMetaFields: PropTypes.func,\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Register a plugin to add items to the Gutenberg Toolbar.\n * \n * This main index file is enqueued by the PHP Init class.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/slotfills/plugin-sidebar/\n */\nimport { registerPlugin } from '@wordpress/plugins'\nimport MetaBox from '../components/MetaBox'\n\nregisterPlugin( 'bigup-cpt-service-metabox', {\n\trender: MetaBox\n} )\n"],"names":["prefix","key","customFields","json","console","log","MetaBox","postType","metaFields","setMetaFields","fields","forEach","customField","metaKey","suffix","value","inputType","input_type","push","newValue","label","description","placeholder","required","length_limit","useSelect","select","getMedia","createElement","Fragment","map","field","PluginDocumentSettingPanel","name","title","initialOpen","type","PanelRow","TextControl","onChange","updateValue","maxLength","maxlength","MediaUploadCheck","MediaUpload","onSelect","newMedia","id","allowedTypes","render","open","Button","className","onClick","__","undefined","media","ResponsiveWrapper","naturalWidth","media_details","width","naturalHeight","height","src","source_url","variant","isLarge","applyWithSelect","withSelect","getEditedPostAttribute","getCurrentPostType","applyWithDispatch","withDispatch","dispatch","editPost","meta","compose","propTypes","PropTypes","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerPlugin"],"sourceRoot":""}